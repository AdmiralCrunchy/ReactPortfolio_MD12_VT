{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vince\\\\UW_Coding_BootCamp\\\\Term_03\\\\ReactPortfolio_MD20_VT\\\\uwbc_mod_20\\\\src\\\\js\\\\components\\\\Navigation.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Nav(_ref) {\n  let {\n    currentPage,\n    handlePageChange\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"nav nav-tabs\",\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"nav-item\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#home\",\n        onClick: () => handlePageChange('Home') // This is a conditional (ternary) operator that checks to see if the current page is \"Home\"\n        // If it is, we set the current page to 'nav-link-active', otherwise we set it to 'nav-link'\n        ,\n        className: currentPage === 'Home' ? 'nav-link active' : 'nav-link',\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"nav-item\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#about\",\n        onClick: () => handlePageChange('About') // Check to see if the currentPage is `About`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n        ,\n        className: currentPage === 'About' ? 'nav-link active' : 'nav-link',\n        children: \"About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"nav-item\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#blog\",\n        onClick: () => handlePageChange('Blog') // Check to see if the currentPage is `Blog`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n        ,\n        className: currentPage === 'Blog' ? 'nav-link active' : 'nav-link',\n        children: \"Blog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"nav-item\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#contact\",\n        onClick: () => handlePageChange('Contact') // Check to see if the currentPage is `Contact`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n        ,\n        className: currentPage === 'Contact' ? 'nav-link active' : 'nav-link',\n        children: \"Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Nav;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"names":["React","Nav","currentPage","handlePageChange"],"sources":["C:/Users/vince/UW_Coding_BootCamp/Term_03/ReactPortfolio_MD20_VT/uwbc_mod_20/src/js/components/Navigation.js"],"sourcesContent":["import React from 'react';\r\n\r\nfunction Nav({currentPage, handlePageChange}) {\r\n    return( \r\n        <ul className=\"nav nav-tabs\">\r\n            <li className=\"nav-item\">\r\n                <a\r\n                href=\"#home\"\r\n                onClick={() => handlePageChange('Home')}\r\n                // This is a conditional (ternary) operator that checks to see if the current page is \"Home\"\r\n                // If it is, we set the current page to 'nav-link-active', otherwise we set it to 'nav-link'\r\n                className={currentPage === 'Home' ? 'nav-link active' : 'nav-link'}\r\n                >\r\n                Home\r\n                </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <a\r\n                href=\"#about\"\r\n                onClick={() => handlePageChange('About')}\r\n                // Check to see if the currentPage is `About`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\r\n                className={currentPage === 'About' ? 'nav-link active' : 'nav-link'}\r\n                >\r\n                About\r\n                </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <a\r\n                href=\"#blog\"\r\n                onClick={() => handlePageChange('Blog')}\r\n                // Check to see if the currentPage is `Blog`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\r\n                className={currentPage === 'Blog' ? 'nav-link active' : 'nav-link'}\r\n                >\r\n                Blog\r\n                </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <a\r\n                href=\"#contact\"\r\n                onClick={() => handlePageChange('Contact')}\r\n                // Check to see if the currentPage is `Contact`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\r\n                className={currentPage === 'Contact' ? 'nav-link active' : 'nav-link'}\r\n                >\r\n                Contact\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    )\r\n}"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,GAAT,OAA8C;EAAA,IAAjC;IAACC,WAAD;IAAcC;EAAd,CAAiC;EAC1C,oBACI;IAAI,SAAS,EAAC,cAAd;IAAA,wBACI;MAAI,SAAS,EAAC,UAAd;MAAA,uBACI;QACA,IAAI,EAAC,OADL;QAEA,OAAO,EAAE,MAAMA,gBAAgB,CAAC,MAAD,CAF/B,CAGA;QACA;QAJA;QAKA,SAAS,EAAED,WAAW,KAAK,MAAhB,GAAyB,iBAAzB,GAA6C,UALxD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ,eAYI;MAAI,SAAS,EAAC,UAAd;MAAA,uBACI;QACA,IAAI,EAAC,QADL;QAEA,OAAO,EAAE,MAAMC,gBAAgB,CAAC,OAAD,CAF/B,CAGA;QAHA;QAIA,SAAS,EAAED,WAAW,KAAK,OAAhB,GAA0B,iBAA1B,GAA8C,UAJzD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAZJ,eAsBI;MAAI,SAAS,EAAC,UAAd;MAAA,uBACI;QACA,IAAI,EAAC,OADL;QAEA,OAAO,EAAE,MAAMC,gBAAgB,CAAC,MAAD,CAF/B,CAGA;QAHA;QAIA,SAAS,EAAED,WAAW,KAAK,MAAhB,GAAyB,iBAAzB,GAA6C,UAJxD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAtBJ,eAgCI;MAAI,SAAS,EAAC,UAAd;MAAA,uBACI;QACA,IAAI,EAAC,UADL;QAEA,OAAO,EAAE,MAAMC,gBAAgB,CAAC,SAAD,CAF/B,CAGA;QAHA;QAIA,SAAS,EAAED,WAAW,KAAK,SAAhB,GAA4B,iBAA5B,GAAgD,UAJ3D;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAhCJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AA6CH;;KA9CQD,G"},"metadata":{},"sourceType":"module"}